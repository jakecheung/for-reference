#!/bin/bash
rm modified_files.txt
rm -rf dev_branch_folder
rm -rf delta_branch

# GitHub 仓库信息
GIT_REPO=
OWNER=""
REPO=""
TOKEN="" # 替换为您的 GitHub 访问令牌
PULL_NUMBER="1" # 替换为您的 Pull Request 编号
PROJECT_NAME="shell-script-development"

# GitHub API URL
API_URL="https://api.github.com/repos/$OWNER/$REPO/pulls/$PULL_NUMBER/files"

# 1. 获取PR的文件列表
echo "Fetching changed files for PR #$PULL_NUMBER..."
FILES=$(curl -s -X GET -H "Authorization: token $TOKEN" "$API_URL" | jq -r '.[] | .filename')

# 检查是否有文件被修改
if [ -z "$FILES" ]; then
  echo "No files changed in PR #$PULL_NUMBER."
  exit 0
fi

# 保存文件列表到临时文件
echo "$FILES" > modified_files.txt

# 2. 创建一个新的文件夹，用git初始化远端仓库
NEW_FOLDER="dev_branch_folder"
DELTA_FOLDER="delta_branch"

mkdir "$NEW_FOLDER"
mkdir "$DELTA_FOLDER"

cd "$NEW_FOLDER"
git init
#
# 添加远端仓库URL
#git remote add origin git@github.com:$OWNER/$NEW_FOLDER.git
git clone git@github.com:jakecheung/shell-script-development.git

# 3. 切换到dev分支，然后基于dev分支创建一个feature/delta分支
git fetch origin
git checkout -b dev
git checkout -b feature/delta

# 4. 删除PR中有文件改动过以外的文件
# 将文件列表保存到数组
#cd "$NEW_FOLDER" #Testing
cd $PROJECT_NAME

# 读取文件列表
while IFS= read -r file; do
  fileArray+=("$file") # 将文件名添加到数组
done < ../../"modified_files.txt"


# 跳过删除的文件列表
SKIP_FILES=("./res") # 替换为您想要跳过的文件或目录

# 删除不在PR文件列表中的文件
find . -type f | while read -r file; do
  # 检查是否在跳过列表中
  skip=0
  for skip_file in "${SKIP_FILES[@]}"; do
    if [[ "$file" == "./$skip_file" ]]; then
      skip=1
      break
    fi
  done

  # 如果不在跳过列表中，检查是否在PR文件列表中
  if [ $skip -eq 0 ]; then
    found=0
    for item in "${fileArray[@]}"; do
      if [[ "$file" == "./$item" ]]; then
        echo "Keeping file:$file"
        file_folder_path="${file%/*}"
        target_folder_path=../../$DELTA_FOLDER/$file_folder_path

        # 检查目标文件夹是否存在
        if [ ! -d "$target_folder_path" ]; then
            # 如果不存在，则创建目标文件夹
            mkdir -p "$target_folder_path"
        fi
        cp  $file ../../$DELTA_FOLDER${file/./}
        found=1
        break
      fi
    done
    if [ $found -eq 0 ]; then
      x=1
#      echo "Removing file: $file"
#      rm "$file"
    fi
  fi
done

# 清理临时文件
#rm modified_files.txt

echo "Script completed. Files not in PR have been removed."


echo "try to push delta branch"
cd ../../
